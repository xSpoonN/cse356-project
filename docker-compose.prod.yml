networks:
  agent_network:
    driver: overlay
    attachable: true

volumes:
  osm-data:
  mongo-data:
  mongo-config:
  portainer_data:

services:
  nginx:
    container_name: nginx
    build:
      context: ./docker/
      dockerfile: ./nginx.Dockerfile
    platform: linux/amd64

  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: ../docker/frontend.prod.Dockerfile
    platform: linux/amd64

  fluentd:
    container_name: fluentd
    build:
      context: ./docker/
      dockerfile: ./fluentd.Dockerfile
    platform: linux/amd64

  backend:
    container_name: backend
    build:
      context: ./backend/
      dockerfile: ../docker/backend.prod.Dockerfile
    platform: linux/amd64

  tile-server:
    container_name: tile-server
    build:
      context: ./docker/
      dockerfile: ./tile.Dockerfile
    platform: linux/amd64

  search:
    container_name: search_microservice
    platform: linux/amd64
    build:
      context: ./search/
      dockerfile: ../docker/search.Dockerfile
    ports:
      - '3003:80'
    restart: always

  # mongo:
  #   container_name: mongo
  #   image: mongo:latest
  #   platform: linux/amd64
  #   volumes:
  #     - mongo-data:/data/db
  #     - mongo-config:/data/configdb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: 'root'
  #     MONGO_INITDB_ROOT_PASSWORD: 'password'
  #     MONGO_INITDB_DATABASE: 'user'

  db:
    container_name: db
    platform: linux/amd64
    build:
      context: ./docker/
      dockerfile: ./db.Dockerfile
    volumes:
      - osm-data:/var/lib/postgresql/14/main
      - ./backup:/backup
    ports:
      - '5432:5432'
    restart: always

  # tile-cache:
  #   container_name: tile-cache
  #   platform: linux/amd64
  #   image: memcached:latest
  #   command: '-m 512 -I 10m -v'
