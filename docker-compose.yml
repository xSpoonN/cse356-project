x-logging-options: &logging
  logging:
    driver: 'fluentd'
    options:
      tag: '{{.Name}}'
      fluentd-address: localhost:24224
      fluentd-async-connect: 'true'

volumes:
  osm-data:
  mongo-data:
  mongo-config:
  portainer_data:

services:
  nginx:
    container_name: nginx
    build:
      context: ./docker/
      dockerfile: ./nginx.Dockerfile
    image: nginx:dev
    ports:
      - '80:80'
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
      - tile-server
      - search
    <<: *logging

  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: ../docker/frontend.dev.Dockerfile
    image: frontend:dev
    depends_on:
      - fluentd
      - backend
    restart: always

  backend:
    container_name: backend
    build:
      context: ./backend/
      dockerfile: ../docker/backend.dev.Dockerfile
    image: backend:dev
    volumes:
      - ./backend/routes:/app/routes
    depends_on:
      - tile-server
      - db
      - mongo
    restart: always
    <<: *logging

  tile-server:
    container_name: tile-server
    build:
      context: ./docker/
      dockerfile: ./tile.Dockerfile
    image: tile-server:dev
    ports:
      - '8080:80'
    restart: always
    shm_size: '2gb'

  search:
    container_name: search_microservice
    build:
      context: ./search/
      dockerfile: ../docker/search.Dockerfile
    image: search:dev
    ports:
      - '3003:80'
    restart: always

  mongo:
    container_name: mongo
    image: mongo:latest
    volumes:
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'password'
      MONGO_INITDB_DATABASE: 'user'
    restart: always

  db:
    container_name: db
    build:
      context: ./docker/
      dockerfile: ./db.Dockerfile
    image: db:dev
    volumes:
      - osm-data:/var/lib/postgresql/14/main
      - ./backup:/backup
    ports:
      - '5432:5432'
    shm_size: '2gb'
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '8g'
        reservations:
          cpus: '0.25'
          memory: '512m'

  tile-cache:
    image: bitnami/memcached:latest
    environment:
      - MEMCACHED_CACHE_SIZE=3500 #in mb
      - MEMCACHED_MAX_ITEM_SIZE=31457280 #in bytes
      - MEMCACHED_THREADS=2
    command: /opt/bitnami/scripts/memcached/run.sh -vv

  fluentd:
    container_name: fluentd
    build:
      context: ./docker/
      dockerfile: ./fluentd.Dockerfile
    image: fluentd:dev
    ports:
      - '24224:24224'
      - '24224:24224/udp'

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:2.19.4
    ports:
      - '9443:9443'
      - '8000:8000'
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
