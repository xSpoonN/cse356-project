x-logging-options: &logging
  logging:
    driver: 'fluentd'
    options:
      tag: '{{.Name}}'
      fluentd-address: localhost:24224
      fluentd-async-connect: 'true'

volumes:
  osm-data1:
  mongo-data:
  mongo-config:
  portainer_data:

services:
  nginx:
    container_name: nginx
    platform: linux/amd64
    image: nginx:latest
    ports:
      - '80:80'
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
      - tile-server
      - search
    <<: *logging

  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: ../docker/frontend.dev.Dockerfile
    depends_on:
      - fluentd
      - backend
    restart: always

  backend:
    container_name: backend
    build:
      context: ./backend/
      dockerfile: ../docker/backend.dev.Dockerfile
    depends_on:
      - tile-server
      - db
      - mongo
    restart: always
    <<: *logging

  tile-server:
    container_name: tile-server
    build:
      context: ./docker/
      dockerfile: ./tile.Dockerfile
    ports:
      - '8080:80'
    shm_size: 256mb
    depends_on:
      - db
    restart: always

  search:
    container_name: search_microservice
    build:
      context: ./search/
      dockerfile: ../docker/search.Dockerfile
    ports:
      - '3003:80'
    restart: always

  mongo:
    container_name: mongo
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'password'
      MONGO_INITDB_DATABASE: 'user'
    restart: always

  db:
    container_name: db
    build:
      context: ./docker/
      dockerfile: ./db.Dockerfile
    volumes:
      - osm-data1:/var/lib/postgresql/14/main
      - ./backup:/backup
    ports:
      - '5432:5432'
    restart: always

  tile-cache:
    container_name: tile-cache
    image: memcached:latest
    command: '-m 512 -I 10m -v'

  fluentd:
    container_name: fluentd
    build:
      context: ./docker/
      dockerfile: ./fluentd.Dockerfile
    ports:
      - '24224:24224'
      - '24224:24224/udp'

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:2.19.4
    ports:
      - '9443:9443'
      - '8000:8000'
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
